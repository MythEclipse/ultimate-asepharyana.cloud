//! THIS FILE IS AUTOMATICALLY GENERATED BY build.rs
//! DO NOT EDIT THIS FILE MANUALLY

pub mod proxy_handler;

#[utoipa::path(get, path = "/proxy/proxy_handler", tag = "proxy", responses((status = 200, description = "proxy handler", body = String), (status = 500, description = "Internal Server Error")))]
pub fn PROXY_HANDLER_UTOIPA() {}

use crate::routes::api::proxy::proxy_handler;

use axum::{routing::{get, post, put, delete, patch, head, options}, Router};
use crate::routes::ChatState;
use std::sync::Arc;

pub fn create_routes() -> Router<Arc<ChatState>> {
    let router = Router::new();
    let router = router.route("/proxy/proxy_handler", get(proxy_handler::proxy_handler));
    router
}
