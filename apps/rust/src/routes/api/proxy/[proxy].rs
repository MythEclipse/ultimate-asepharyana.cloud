//! THIS FILE IS AUTOMATICALLY GENERATED BY build.rs

use axum::{ extract::Path, response::{ IntoResponse, Response }, Json };
use serde::{ Deserialize, Serialize };
use utoipa::ToSchema;

pub async fn proxy_handler(Path(proxy): Path<String>) -> Response {
  let response_data = ProxyData {
    message: format!("Proxying request for: {}", proxy),
    slug: proxy.clone(),
  };

  let response = ProxyResponse {
    status: "Ok",
    data: response_data,
  };

  Json(response).into_response()
}


pub fn register_routes(router: Router<Arc<ChatState>>) -> Router<Arc<ChatState>> {
    router.route(ENDPOINT_PATH, axum::routing::get(proxy_handler))
}