//! THIS FILE IS AUTOMATICALLY GENERATED BY build.rs
//! DO NOT EDIT THIS FILE MANUALLY

use axum::Router;
use std::sync::Arc;
use utoipa::OpenApi;
use crate::routes::ChatState;

pub mod anime;
pub mod anime2;
pub mod chat;
pub mod compress;
pub mod drivepng;
pub mod komik;
pub mod proxy;
pub mod uploader;

#[derive(OpenApi)]
#[openapi(
    paths(
crate::routes::api::anime::complete_anime::COMPLETE_ANIME_HANDLER_UTOIPA,
crate::routes::api::anime::detail::DETAIL_HANDLER_UTOIPA,
crate::routes::api::anime::full::FULL_EPISODE_HANDLER_UTOIPA,
crate::routes::api::anime::ongoing_anime::ONGOING_ANIME_HANDLER_UTOIPA,
crate::routes::api::anime::search::SEARCH_HANDLER_UTOIPA,
crate::routes::api::anime2::complete_anime::COMPLETE_ANIME_HANDLER_UTOIPA,
crate::routes::api::anime2::detail::DETAIL_HANDLER_UTOIPA,
crate::routes::api::anime2::ongoing_anime::ONGOING_ANIME_HANDLER_UTOIPA,
crate::routes::api::anime2::search::SEARCH_HANDLER_UTOIPA,
crate::routes::api::chat::CHAT_HANDLER_UTOIPA,
crate::routes::api::compress::COMPRESS_HANDLER_UTOIPA,
crate::routes::api::compress::COMPRESS_IMAGE_FROM_URL_UTOIPA,
crate::routes::api::drivepng::DRIVEPNG_HANDLER_UTOIPA,
crate::routes::api::komik::chapter::CHAPTER_HANDLER_UTOIPA,
crate::routes::api::komik::detail::DETAIL_HANDLER_UTOIPA,
crate::routes::api::komik::manga::MANGA_HANDLER_UTOIPA,
crate::routes::api::komik::manhua::MANHUA_HANDLER_UTOIPA,
crate::routes::api::komik::manhwa::MANHWA_HANDLER_UTOIPA,
crate::routes::api::komik::search::SEARCH_HANDLER_UTOIPA,
crate::routes::api::proxy::PROXY_HANDLER_UTOIPA,
crate::routes::api::uploader::UPLOADER_HANDLER_UTOIPA
    ),
    components(schemas(crate::routes::api::komik::chapter::ChapterData, crate::routes::api::komik::chapter::ChapterResponse, crate::routes::api::komik::detail::DetailData, crate::routes::api::komik::detail::DetailResponse, crate::routes::api::komik::manga::MangaData, crate::routes::api::komik::manga::MangaResponse, crate::routes::api::komik::manhua::ManhuaData, crate::routes::api::komik::manhua::ManhuaResponse, crate::routes::api::komik::manhwa::ManhwaData, crate::routes::api::komik::manhwa::ManhwaResponse, crate::routes::api::komik::search::SearchData, crate::routes::api::komik::search::SearchResponse, crate::routes::api::proxy::ProxyData, crate::routes::api::proxy::ProxyResponse, crate::routes::api::uploader::UploadData, crate::routes::api::uploader::UploadResponse)),
    tags((
        name = "api", description = "Main API"
    ))
)]
pub struct ApiDoc;

pub fn create_api_routes() -> Router<Arc<ChatState>> {
    Router::new()
        .nest("/anime", anime::create_routes())
        .nest("/anime2", anime2::create_routes())
        .nest("/chat", chat::create_routes())
        .nest("/compress", compress::create_routes())
        .nest("/drivepng", drivepng::create_routes())
        .nest("/komik", komik::create_routes())
        .nest("/proxy", proxy::create_routes())
        .nest("/uploader", uploader::create_routes())
}
