//! THIS FILE IS AUTOMATICALLY GENERATED BY build.rs
//! DO NOT EDIT THIS FILE MANUALLY

use utoipa::OpenApi;
use axum::Router;
use crate::routes::ChatState;
use std::sync::Arc;

pub mod anime;
pub mod anime2;
pub mod chat;
pub mod compress;
pub mod drivepng;
pub mod komik;
pub mod proxy;
pub mod uploader;

/// Aggregates OpenAPI docs for all API groups.
#[derive(OpenApi)]
#[openapi(
    tags(
        (name = "api", description = "Root API module")
    ),
    paths(
        "/api/anime/",
        "/api/anime/complete-anime/{slug}",
        "/api/anime/ongoing-anime/{slug}",
        "/api/anime/full/{slug}",
        "/api/anime/search",
        "/api/anime/detail/{slug}",
        "/api/compress"
    )
)]
pub struct ApiDoc;

pub fn create_api_routes() -> Router<Arc<ChatState>> {
    let mut router = Router::new();
    router = router.merge(anime::create_routes());
    router = router.merge(anime2::create_routes());
    router = router.merge(chat::create_routes());
    router = router.merge(compress::create_routes());
    router = router.merge(drivepng::create_routes());
    router = router.merge(komik::create_routes());
    router = router.merge(proxy::create_routes());
    router = router.merge(uploader::create_routes());
    router
}
