//! THIS FILE IS AUTOMATICALLY GENERATED BY build.rs

use axum::{
    extract::Multipart,
    response::{IntoResponse, Response},
    Json,
};
use serde::{Deserialize, Serialize};
use utoipa::ToSchema;


pub async fn uploader_handler(mut multipart: Multipart) -> Response {
    let mut filename = String::new();
    while let Some(field) = multipart.next_field().await.unwrap() {
        filename = field.file_name().unwrap().to_string();
        let _data = field.bytes().await.unwrap();
    }

    let response_data = UploadData {
        message: format!("File {} uploaded successfully", filename),
        filename,
    };

    let response = UploadResponse {
        status: "Ok",
        data: response_data,
    };

    Json(response).into_response()
}


pub fn register_routes(router: Router<Arc<ChatState>>) -> Router<Arc<ChatState>> {
    router.route(ENDPOINT_PATH, axum::routing::get(uploader_handler))
}