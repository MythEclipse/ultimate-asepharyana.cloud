//! THIS FILE IS AUTOMATICALLY GENERATED BY build.rs
//! DO NOT EDIT THIS FILE MANUALLY

pub mod compress_handler;
pub mod tests;

#[utoipa::path(get, path = "/compress/compress_handler", tag = "compress", responses((status = 200, description = "compress handler", body = String), (status = 500, description = "Internal Server Error")))]
pub fn COMPRESS_HANDLER_UTOIPA() {}

#[utoipa::path(get, path = "/compress/tests", tag = "compress", responses((status = 200, description = "compress image from url handler", body = String), (status = 500, description = "Internal Server Error")))]
pub fn COMPRESS_IMAGE_FROM_URL_UTOIPA() {}

use crate::routes::api::compress::compress_handler;
use crate::routes::api::compress::tests;

use axum::{routing::{get, post, put, delete, patch, head, options}, Router};
use crate::routes::ChatState;
use std::sync::Arc;

pub fn create_routes() -> Router<Arc<ChatState>> {
    let router = Router::new();
    let router = router.route("/compress/compress_handler", get(compress_handler::compress_handler));
    let router = router.route("/compress/tests", get(tests::compress_image_from_url));
    router
}
