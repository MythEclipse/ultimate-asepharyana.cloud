//! THIS FILE IS AUTOMATICALLY GENERATED BY build.rs
//! DO NOT EDIT THIS FILE MANUALLY

pub mod complete_anime;
pub mod detail;
pub mod full;
pub mod ongoing_anime;
pub mod search;

// START: UTOIPA DOCS
#[derive(utoipa::OpenApi)]
#[openapi(
    paths(crate::routes::api::anime::complete_anime::complete_anime_handler,
        crate::routes::api::anime::detail::detail_handler,
        crate::routes::api::anime::full::full_episode_handler,
        crate::routes::api::anime::ongoing_anime::ongoing_anime_handler),
    components(schemas()),
    tags((
        name = "anime", description = "anime endpoints"
    ))
)]
pub struct AnimeApiDoc;
// END: UTOIPA DOCS

// START: API ROUTES
use axum::{routing::{get, post, put, delete, patch, head, options}, Router};
use crate::routes::ChatState;
use std::sync::Arc;

pub fn create_routes() -> Router<Arc<ChatState>> {
    Router::new()
        .route("/complete-anime/{slug}", get(complete_anime::complete_anime_handler))
        .route("/detail/{slug}", get(detail::detail_handler))
        .route("/full/{slug}", get(full::full_episode_handler))
        .route("/ongoing-anime/{slug}", get(ongoing_anime::ongoing_anime_handler))
}

// END: API ROUTES
