openapi: '3.0.2'
paths:
  /api/komik/manga/{slug}:
    get:
      description: 'Mengambil detail manga berdasarkan slug dan parameter kueri lainnya. Mendukung pagination dan pengurutan.'
      summary: 'Mengambil detail manga berdasarkan slug'
      tags:
        - komik
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          description: 'Slug untuk manga'
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: order
          in: query
          schema:
            type: string
            enum:
              - update
              - popular
              - titleasc
              - titledesc
      responses:
        '200':
                description: '200'
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            type: object
                            properties:
                              title:
                                type: string
                              image:
                                type: string
                              chapter:
                                type: string
                              score:
                                type: string
                              date:
                                type: string
                              type:
                                type: string
                              komik_id:
                                type: string
                            required:
                              - title
                              - image
                              - chapter
                              - score
                              - date
                              - type
                              - komik_id
                        pagination:
                          type: object
                          properties:
                            current_page:
                              type: integer
                            last_visible_page:
                              type: integer
                            has_next_page:
                              type: boolean
                            next_page:
                              type: integer
                              nullable: true
                            has_previous_page:
                              type: boolean
                            previous_page:
                              type: integer
                              nullable: true
                      required:
                        - data
                        - pagination
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '500':
          description: '500'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
  /api/komik/manhwa/{slug}:
    get:
      description: 'Mengambil detail manhwa berdasarkan slug dan parameter kueri lainnya. Mendukung pagination dan pengurutan.'
      summary: 'Mengambil detail manhwa berdasarkan slug'
      tags:
        - komik
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          description: 'Slug untuk manhwa'
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: order
          in: query
          schema:
            type: string
            enum:
              - update
              - popular
              - titleasc
              - titledesc
      responses:
        '200':
                description: '200'
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            type: object
                            properties:
                              title:
                                type: string
                              image:
                                type: string
                              chapter:
                                type: string
                              score:
                                type: string
                              date:
                                type: string
                              type:
                                type: string
                              komik_id:
                                type: string
                            required:
                              - title
                              - image
                              - chapter
                              - score
                              - date
                              - type
                              - komik_id
                        pagination:
                          type: object
                          properties:
                            current_page:
                              type: integer
                            last_visible_page:
                              type: integer
                            has_next_page:
                              type: boolean
                            next_page:
                              type: integer
                              nullable: true
                            has_previous_page:
                              type: boolean
                            previous_page:
                              type: integer
                              nullable: true
                      required:
                        - data
                        - pagination
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '500':
          description: '500'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
  /api/komik/manhua/{slug}:
    get:
      description: 'Mengambil detail manhua berdasarkan slug dan parameter kueri lainnya. Mendukung pagination dan pengurutan.'
      summary: 'Mengambil detail manhua berdasarkan slug'
      tags:
        - komik
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          description: 'Slug untuk manhua'
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: order
          in: query
          schema:
            type: string
            enum:
              - update
              - popular
              - titleasc
              - titledesc
      responses:
        '200':
                description: '200'
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            type: object
                            properties:
                              title:
                                type: string
                              image:
                                type: string
                              chapter:
                                type: string
                              score:
                                type: string
                              date:
                                type: string
                              type:
                                type: string
                              komik_id:
                                type: string
                            required:
                              - title
                              - image
                              - chapter
                              - score
                              - date
                              - type
                              - komik_id
                        pagination:
                          type: object
                          properties:
                            current_page:
                              type: integer
                            last_visible_page:
                              type: integer
                            has_next_page:
                              type: boolean
                            next_page:
                              type: integer
                              nullable: true
                            has_previous_page:
                              type: boolean
                            previous_page:
                              type: integer
                              nullable: true
                      required:
                        - data
                        - pagination
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '500':
          description: '500'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
  /api/komik/search:
    get:
      description: 'Mengambil daftar manga berdasarkan kueri'
      summary: 'Mengambil daftar manga'
      tags:
        - komik
      parameters:
        - name: query
          in: query
          schema:
            type: string
      responses:
       '200':
                description: '200'
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            type: object
                            properties:
                              title:
                                type: string
                              image:
                                type: string
                              chapter:
                                type: string
                              score:
                                type: string
                              date:
                                type: string
                              type:
                                type: string
                              komik_id:
                                type: string
                            required:
                              - title
                              - image
                              - chapter
                              - score
                              - date
                              - type
                              - komik_id
                        prevPage:
                          type: boolean
                        nextPage:
                          type: boolean
                      required:
                        - data
                        - prevPage
                        - nextPage
       '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
       '500':
          description: '500'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
  /api/komik/detail:
    get:
      description: 'Mengambil detail manga tertentu berdasarkan ID-nya.'
      summary: 'Mengambil detail manga'
      tags:
        - komik
      parameters:
        - name: komik_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      title:
                        type: string
                      japanese_title:
                        type: string
                      poster:
                        type: string
                      rating:
                        type: string
                      credit:
                        type: string
                      type:
                        type: string
                      status:
                        type: string
                      episode_count:
                        type: string
                      duration:
                        type: string
                      release_date:
                        type: string
                      studio:
                        type: string
                      genres:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            slug:
                              type: string
                            otakudesu_url:
                              type: string
                      synopsis:
                        type: string
                      episode_lists:
                        type: array
                        items:
                          type: object
                          properties:
                            episode:
                              type: string
                            slug:
                              type: string
                            otakudesu_url:
                              type: string
                            quality:
                              type: array
                              items:
                                type: object
                                properties:
                                  res:
                                    type: string
                                  buttons:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                        url:
                                          type: string
                      recommendations:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                            slug:
                              type: string
                            poster:
                              type: string
                            otakudesu_url:
                              type: string
                    required:
                      - title
                      - japanese_title
                      - poster
                      - rating
                      - credit
                      - type
                      - status
                      - episode_count
                      - duration
                      - release_date
                      - studio
                      - genres
                      - synopsis
                      - episode_lists
                      - recommendations
                required:
                  - status
                  - data
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '500':
          description: '500'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
  /api/komik/chapter:
    get:
      description: 'Mengambil gambar untuk chapter manga tertentu berdasarkan URL-nya.'
      summary: 'Mengambil gambar chapter manga'
      tags:
        - komik
      parameters:
        - name: chapter_url
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      title:
                        type: string
                      next_chapter_id:
                        type: string
                      prev_chapter_id:
                        type: string
                      images:
                        type: array
                        items:
                          type: string
                    required:
                      - title
                      - next_chapter_id
                      - prev_chapter_id
                      - images
                required:
                  - message
                  - data
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '500':
          description: '500'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
  /api/anime:
    get:
      summary: 'Mendapatkan anime yang sedang berlangsung dan selesai'
      tags:
        - anime
      description: 'Mengambil daftar anime yang sedang berlangsung dan yang sudah selesai.'
      responses:
        '200':
          description: 'Respon sukses'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      ongoing_anime:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                            slug:
                              type: string
                            poster:
                              type: string
                            current_episode:
                              type: string
                            anime_url:
                              type: string
                      complete_anime:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                            slug:
                              type: string
                            poster:
                              type: string
                            episode_count:
                              type: string
                            anime_url:
                              type: string
  /api/anime/complete-anime/{slug}:
    get:
      summary: 'Mendapatkan daftar anime yang sudah selesai'
      tags:
        - anime
      description: 'Mengambil daftar anime yang sudah selesai berdasarkan slug.'
      parameters:
        - name: slug
          in: path
          required: true
          description: 'Slug untuk halaman anime.'
          schema:
            type: string
          example: '1'
      responses:
        '200':
          description: 'Daftar anime yang sudah selesai berhasil didapatkan'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        slug:
                          type: string
                        poster:
                          type: string
                          format: uri
                        episode:
                          type: string
                        anime_url:
                          type: string
                          format: uri
                  pagination:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      last_visible_page:
                        type: integer
                      has_next_page:
                        type: boolean
                      next_page:
                        type: integer
                        nullable: true
                      has_previous_page:
                        type: boolean
                      previous_page:
                        type: integer
                        nullable: true
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '500':
          description: '500'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
  /api/anime/ongoing-anime/{slug}:
    get:
      summary: 'Dapatkan daftar anime yang sedang tayang berdasarkan slug'
      tags:
        - anime
      description: 'Mengambil daftar anime terbaru.'
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          example: '1'
          description: 'slug untuk halaman anime'
      responses:
        '200':
          description: 'Daftar anime yang sedang tayang berhasil didapatkan'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        slug:
                          type: string
                        poster:
                          type: string
                        current_episode:
                          type: string
                        release_day:
                          type: string
                        newest_release_date:
                          type: string
                        otakudesu_url:
                          type: string
                  pagination:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      last_visible_page:
                        type: integer
                      has_next_page:
                        type: boolean
                      next_page:
                        type: integer
                      has_previous_page:
                        type: boolean
                      previous_page:
                        type: integer
                        nullable: true
  /api/anime/detail/{slug}:
    get:
      summary: 'Dapatkan Detail anime'
      description: 'Mendapatkan detail dari anime.'
      tags:
        - anime
      parameters:
        - name: slug
          in: path
          required: true
          description: 'Slug untuk halaman anime.'
          schema:
            type: string
          example: 'log-horiz-subtitle-indonesia'
      responses:
        '200':
          description: 'Detail anime berhasil diambil.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      title:
                        type: string
                      alternative_title:
                        type: string
                      poster:
                        type: string
                      type:
                        type: string
                      status:
                        type: string
                      release_date:
                        type: string
                      studio:
                        type: string
                      genres:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            slug:
                              type: string
                            anime_url:
                              type: string
                      synopsis:
                        type: string
                      episode_lists:
                        type: array
                        items:
                          type: object
                          properties:
                            episode:
                              type: string
                            slug:
                              type: string
                      batch:
                        type: array
                        items:
                          type: object
                          properties:
                            episode:
                              type: string
                            slug:
                              type: string
                      producers:
                        type: array
                        items:
                          type: string
                      recommendations:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                            slug:
                              type: string
                            poster:
                              type: string

  /api/anime/full/{slug}:
    get:
      summary: 'Dapatkan episode anime berdasarkan slug'
      description: 'Mengambil episode anime berdasarkan slug.'
      tags:
        - anime
      parameters:
        - name: slug
          in: path
          required: true
          description: 'Slug untuk halaman episode anime.'
          schema:
            type: string
          example: 'lgrhzon-episode-1-sub-indo'
      responses:
        '200':
          description: 'Episode anime berhasil diambil.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      episode:
                        type: string
                      episode_number:
                        type: string
                      anime:
                        type: object
                        properties:
                          slug:
                            type: string
                      has_next_episode:
                        type: boolean
                      next_episode:
                        type: object
                        nullable: true
                        properties:
                          slug:
                            type: string
                      has_previous_episode:
                        type: boolean
                      previous_episode:
                        type: object
                        nullable: true
                        properties:
                          slug:
                            type: string
                      stream_url:
                        type: string
                      download_urls:
                        type: object
                        additionalProperties:
                          type: array
                          items:
                            type: object
                            properties:
                              server:
                                type: string
                              url:
                                type: string
                      image_url:
                        type: string
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '500':
          description: '500'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message


  /api/anime/search:
    get:
      summary: 'Cari anime berdasarkan kueri'
      tags:
        - anime
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
          example: 'log horizon'
          description: 'Kueri pencarian untuk anime'
      responses:
        '200':
          description: 'Respon sukses'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        slug:
                          type: string
                        poster:
                          type: string
                        episode:
                          type: string
                        anime_url:
                          type: string
                        genres:
                          type: array
                          items:
                            type: string
                        status:
                          type: string
                        rating:
                          type: string
                  pagination:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      last_visible_page:
                        type: integer
                      has_next_page:
                        type: boolean
                      next_page:
                        type: integer
                        nullable: true
                      has_previous_page:
                        type: boolean
                      previous_page:
                        type: integer
                        nullable: true
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '500':
          description: '500'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
  /api/anime2:
    get:
      summary: 'Mendapatkan anime yang sedang berlangsung dan selesai'
      tags:
        - anime2
      description: 'Mengambil daftar anime yang sedang berlangsung dan yang sudah selesai.'
      responses:
        '200':
          description: 'Respon sukses'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      ongoing_anime:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                            slug:
                              type: string
                            poster:
                              type: string
                            current_episode:
                              type: string
                            anime_url:
                              type: string
                      complete_anime:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                            slug:
                              type: string
                            poster:
                              type: string
                            episode_count:
                              type: string
                            anime_url:
                              type: string
  /api/anime2/complete-anime/{slug}:
    get:
      summary: 'Mendapatkan daftar anime yang sudah selesai'
      tags:
        - anime2
      description: 'Mengambil daftar anime yang sudah selesai berdasarkan slug.'
      parameters:
        - name: slug
          in: path
          required: true
          description: 'Slug untuk halaman anime.'
          schema:
            type: string
          example: '1'
      responses:
        '200':
          description: 'Daftar anime yang sudah selesai berhasil didapatkan'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        slug:
                          type: string
                        poster:
                          type: string
                          format: uri
                        episode:
                          type: string
                        anime_url:
                          type: string
                          format: uri
                  pagination:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      last_visible_page:
                        type: integer
                      has_next_page:
                        type: boolean
                      next_page:
                        type: integer
                        nullable: true
                      has_previous_page:
                        type: boolean
                      previous_page:
                        type: integer
                        nullable: true
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '500':
          description: '500'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message

  /api/anime2/ongoing-anime/{slug}:
    get:
      summary: 'Mendapatkan daftar anime yang sudah selesai'
      tags:
        - anime2
      description: 'Mengambil daftar anime yang sudah selesai berdasarkan slug.'
      parameters:
        - name: slug
          in: path
          required: true
          description: 'Slug untuk halaman anime.'
          schema:
            type: string
          example: '1'
      responses:
        '200':
          description: 'Daftar anime yang sudah selesai berhasil didapatkan'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        slug:
                          type: string
                        poster:
                          type: string
                          format: uri
                        episode:
                          type: string
                        anime_url:
                          type: string
                          format: uri
                  pagination:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      last_visible_page:
                        type: integer
                      has_next_page:
                        type: boolean
                      next_page:
                        type: integer
                        nullable: true
                      has_previous_page:
                        type: boolean
                      previous_page:
                        type: integer
                        nullable: true
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '500':
          description: '500'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message

  /api/anime2/detail/{slug}:
    get:
      summary: 'Dapatkan Detail anime'
      description: 'Mendapatkan detail dari anime.'
      tags:
        - anime2
      parameters:
        - name: slug
          in: path
          required: true
          description: 'Slug untuk halaman anime.'
          schema:
            type: string
          example: 'log-horizon'
      responses:
        '200':
          description: 'Detail anime berhasil diambil.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      title:
                        type: string
                      alternative_title:
                        type: string
                      poster:
                        type: string
                      type:
                        type: string
                      status:
                        type: string
                      release_date:
                        type: string
                      studio:
                        type: string
                      genres:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            slug:
                              type: string
                            anime_url:
                              type: string
                      synopsis:
                        type: string
                      episode_lists:
                        type: array
                        items:
                          type: object
                          properties:
                            episode:
                              type: string
                            slug:
                              type: string
                      batch:
                        type: array
                        items:
                          type: object
                          properties:
                            episode:
                              type: string
                            slug:
                              type: string
                      producers:
                        type: array
                        items:
                          type: string
                      recommendations:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                            slug:
                              type: string
                            poster:
                              type: string


  /api/anime2/search:
    get:
      summary: 'Cari anime berdasarkan kueri'
      tags:
        - anime2
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
          example: 'log horizon'
          description: 'Kueri pencarian untuk anime'
      responses:
        '200':
          description: 'Respon sukses'
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        slug:
                          type: string
                        poster:
                          type: string
                        episode:
                          type: string
                        anime_url:
                          type: string
                        genres:
                          type: array
                          items:
                            type: string
                        status:
                          type: string
                        rating:
                          type: string
                  pagination:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      last_visible_page:
                        type: integer
                      has_next_page:
                        type: boolean
                      next_page:
                        type: integer
                        nullable: true
                      has_previous_page:
                        type: boolean
                      previous_page:
                        type: integer
                        nullable: true
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '500':
          description: '500'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
  /api/uploader:
    post:
      summary: 'File Uploader'
      tags:
        - tools
      description: 'Upload files to pomf2 service'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: The file to upload
      responses:
        '200':
          description: 'File uploaded successfully'
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    description: The URL of the uploaded file
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: 'Upload failed'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/proxy:
    get:
      summary: 'Proxy'
      tags:
        - tools
      description: 'Proxy request to multiple base URLs'
      parameters:
        - name: url
          in: query
          required: true
          schema:
            type: string
            example: 'https://asepharyana.tech'
      responses:
        '200':
          description: 'Successful proxy response'
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: 'Internal server error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
  /api/compress:
    get:
      summary: Compress an image or video
      tags:
        - tools
      parameters:
        - in: query
          name: url
          required: true
          schema:
            type: string
          description: URL of the media file to compress
        - in: query
          name: size
          required: true
          schema:
            type: string
          description: Size or quality for compression (e.g., '50%' or '1' for 1MB)
      responses:
        '200':
          description: Compressed media file
          content:
            application/json:
              schema:
                type: object
                properties:
                  link:
                    type: string
                    description: URL to the compressed media file
        '400':
          description: Invalid query parameters or unsupported file type
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '429':
          description: Server is busy, try again later
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Failed to process the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/drivepng:
    get:
      summary: 'Drive Downloader'
      tags:
        - tools
      description: 'Scrapes Google Drive thumbnail URLs to extract direct download links.'
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
          description: 'The Google Drive file ID (e.g., 1tbOJKacQGsfldr5TsWtzNKL65iCpADz2).'
          example: '1tbOJKacQGsfldr5TsWtzNKL65iCpADz2'
      responses:
        '200':
          description: 'Successful response with the direct download URL.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  downloadUrl:
                    type: string
                    description: 'The direct download URL for the file.'
                    example: 'https://drive.usercontent.google.com/download?id=1tbOJKacQGsfldr5TsWtzNKL65iCpADz2&export=download&confirm=t&uuid=...'
        '400':
          description: 'Bad request, e.g., missing URL parameter.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'URL parameter is missing'
        '500':
          description: 'Internal server error, e.g., failed to scrape or downloadUrl not found.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Failed to scrape drive downloader'

info:
  title: Freefire
  version: '0.0.1'
  description: api gratis
